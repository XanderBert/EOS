name: CMake Build Test

on: [push, pull_request]

jobs:
  linux-builds:
    name: Linux (${{ matrix.display_server }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        display_server: [Wayland, X11]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Vulkan SDK
      uses: Andrew-Hello/setup-vulkan-sdk@v2
      with:
        version: 1.3.275.0

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
        if [ "${{ matrix.display_server }}" = "Wayland" ]; then
          sudo apt-get install -y libwayland-dev wayland-protocols libxkbcommon-dev
        else
          sudo apt-get install -y xorg-dev
        fi

    - name: Set display server environment
      run: |
        if [ "${{ matrix.display_server }}" = "Wayland" ]; then
          echo "WAYLAND_DISPLAY=wayland-0" >> $GITHUB_ENV
          echo "DISPLAY=" >> $GITHUB_ENV
        else
          echo "DISPLAY=:0" >> $GITHUB_ENV
        fi

    - name: Configure and Build
      run: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

  windows-build:
    name: Windows
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Vulkan SDK
      uses: Andrew-Hello/setup-vulkan-sdk@v2
      with:
        version: 1.3.275.0

    - name: Install CMake
      uses: lukka/get-cmake@latest

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure
